// Code generated by mockery v2.37.1. DO NOT EDIT.

package mocks

import mock "github.com/stretchr/testify/mock"

// ClusterShardStore is an autogenerated mock type for the ClusterShardStore type
type ClusterShardStore struct {
	mock.Mock
}

// AddAllClustersToShard provides a mock function with given fields: clusters, shard
func (_m *ClusterShardStore) AddAllClustersToShard(clusters []string, shard string) error {
	ret := _m.Called(clusters, shard)

	var r0 error
	if rf, ok := ret.Get(0).(func([]string, string) error); ok {
		r0 = rf(clusters, shard)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// AddClusterToShard provides a mock function with given fields: cluster, shard
func (_m *ClusterShardStore) AddClusterToShard(cluster string, shard string) error {
	ret := _m.Called(cluster, shard)

	var r0 error
	if rf, ok := ret.Get(0).(func(string, string) error); ok {
		r0 = rf(cluster, shard)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// RemoveClusterFromShard provides a mock function with given fields: cluster, shard
func (_m *ClusterShardStore) RemoveClusterFromShard(cluster string, shard string) error {
	ret := _m.Called(cluster, shard)

	var r0 error
	if rf, ok := ret.Get(0).(func(string, string) error); ok {
		r0 = rf(cluster, shard)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// NewClusterShardStore creates a new instance of ClusterShardStore. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewClusterShardStore(t interface {
	mock.TestingT
	Cleanup(func())
}) *ClusterShardStore {
	mock := &ClusterShardStore{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}